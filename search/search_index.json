{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"OPF in Polarcoodinates","text":""},{"location":"#rapid-prototyping-for-distributed-power-flow-problems","title":"Rapid prototyping for distributed power flow problems","text":"<p>The power flow problem is the cornerstone problem in power systems analysis: find all (complex) quantities in an AC electrical network in steady state. Mathematically, the power flow problem is a system of nonlinear equations</p> g(x) = 0 <p>that can be solved by the Newton method, for instance. However, the power flow problem can also be solved in a distributed fashion,</p> <p>$$ \\begin{align} g_{i}(x_i) &amp;= 0, \\\\ \\sum_{i = 1}^{n} A_i x_i &amp;= 0, \\end{align} $$ where i \\in \\{ 1, \\dots, n\\} corresponds to the i-th subproblem. In plain words, the distributed power flow problem means</p> <p>to solve a power flow problem within each region i whilst ensuring that the neighboring power flows satisfy the overall power flow equations.</p> <p>There are several advantages of distributed approaches:</p> <ul> <li>distribute computational effort,</li> <li>preserves privacy,</li> <li>increases reliability,</li> <li>and adds flexibility.</li> </ul>"},{"location":"#what-to-expect","title":"What to expect","text":"<p>The code allows to formulate distributed power flow problems easily. Specifically, the features of the code include:</p> <ul> <li>Starting from several individual case files, generate a merged case file for given connections.</li> <li>Formulate distributed power flow problems in terms of function handles.</li> <li>Solve distributed power flow problems using the Aladin toolbox.</li> <li>Fully compliant with <code>matpower</code> case files, hence allowing to use all of the built-in <code>matpower</code> functions.</li> <li>Insightful post-processing features.</li> </ul>"},{"location":"#what-not-to-expect","title":"What not to expect","text":"<ul> <li>An introduction to the power flow problem as such. There are excellent references for this, for example this one</li> <li>Optimal power flow problems.</li> <li>A collection of numerical routines to solve distributed power flow problems.</li> <li>A visualizer of <code>matpower</code> case files; use STAC for this.</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>See here.</p> <p>Use of <code>matpower</code></p> <p>The code relies heavily on <code>Matpower</code>, especially on the idea of a <code>matpower case file</code> (or <code>mpc</code>). This bulky name is nothing but a standardized <code>Matlab</code> struct, with the advantage that it has become a de facto standard for Matlab-based power systems research. Also, <code>mpc</code> can be converted within <code>matpower</code> to/from IEEE CDF or PSS/E RAW, see the <code>Matpower</code> docs for details.</p>"},{"location":"#citing","title":"Citing","text":"<p>If you find the code useful for your own academic research, please cite it.</p> <pre><code>@ARTICLE{2020arXiv201110322M,\n       author = {{M{\\\"u}hlpfordt}, Tillmann and {Dai}, Xinliang and {Engelmann}, Alexander and {Hagenmeyer}, Veit},\n        title = \"{Distributed Power Flow and Distributed Optimization -- Formulation, Solution, and Open Source Implementation}\",\n      journal = {arXiv e-prints},\n     keywords = {Mathematics - Optimization and Control, Electrical Engineering and Systems Science - Systems and Control},\n         year = 2020,\n        month = nov,\n          eid = {arXiv:2011.10322},\n        pages = {arXiv:2011.10322},\narchivePrefix = {arXiv},\n       eprint = {2011.10322},\n primaryClass = {math.OC},\n       adsurl = {https://ui.adsabs.harvard.edu/abs/2020arXiv201110322M},\n      adsnote = {Provided by the SAO/NASA Astrophysics Data System}\n}\n</code></pre>"},{"location":"note/","title":"note from introduction","text":"<p>Here, we summarize the PF problem with polar voltage coordinates, which is the classic representation. \\widetilde{V}_i = V_i\\angle\\delta in this example, the knote admittance is expressed in rectangular coordinates: \\widetilde{Y}_{ik} = G_{ik}+\\textrm{j}B_{ik} If each bus voltage is represented in polar form with magnitude V and phase angle \\delta,then power quation decomposes into the set of active and reactive power equations in polar form: P_i(V,\\delta) = P^G_i-P^L_i\\quad\\forall i \\in \\mathbf{N} Q_i(V,\\delta) = Q^G_i-Q^L_i\\quad\\forall i \\in \\mathbf{N} For the given \\widetilde{V}_i and \\widetilde{Y}_{ik}, power flow equation can be written in the following form: (59,60 in introduction) The advantage of voltage polar coordinates is that constraints on the voltage magnitude can be enforced directly V_i \\ge V^{\\textrm{min}}_i V_i \\le V^{\\textrm{max}}_i Thus, for a fixed voltage magnitude, use of voltage polar coordinates leads to a reduction of variables, For this reason, polar coordinates are preferred both for conventional PF and most OPF formulations.</p> <p>For the admittance matrix elements, rectangular coordinates (56)and(57) are typically favored because they facilitate the use of certain approximations in fast-decoupled solution methods for conventional PF</p>"},{"location":"note/#comment-in-code","title":"comment in code","text":""},{"location":"note/#create-index-for-buses-branches-generators","title":"create index for buses, branches, generators","text":"<p>entries_pf(1,2,3,4) variables, which should be optimizied. </p>"},{"location":"note/#set-parameters-for-the-constraints","title":"set parameters for the constraints","text":""},{"location":"note/#set-the-objective-function","title":"set the objective function","text":""},{"location":"note/#equality-and-inequality-constraints","title":"equality and inequality constraints","text":""},{"location":"note/#reference-solution","title":"reference solution","text":""},{"location":"note/#solve-the-problem-by-casadi","title":"solve the problem by CasADi","text":""},{"location":"note/#derivatives","title":"derivatives","text":""},{"location":"note/#jacobian","title":"Jacobian","text":""},{"location":"note/#hessian","title":"Hessian","text":""},{"location":"note/#probelm-formulation","title":"Probelm formulation","text":""},{"location":"sensitivity/","title":"Sensitivities","text":""},{"location":"sensitivity/#computation","title":"Computation","text":"Syntax Description Header Title Paragraph Text Here\u2019s a simple footnote,[^1] and here\u2019s a longer one.[^bignote] <p>[^1]: This is the first footnote.</p> <p>[^bignote]: Here\u2019s one with multiple paragraphs and code.</p> <pre><code>Indent paragraphs to include them in the footnote.\n\n`{ my code }`\n\nAdd as many paragraphs as you like.\n</code></pre> Name Function Case file generator Merge several case files &amp; connection information Case file splitter Adjust case files to account for core and copy nodes Case file parser Generate mathematical problem formulation"}]}